{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAkB9C,OACI,sBAAMC,SAZW,SAAEC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,QCFnBG,EAAc,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAElC,OACI,sBAAKC,UAAU,6CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,EAAN,W,uBCPCK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAI1CkB,QAAQC,IAAIP,GAdO,kBAeZA,GAfY,4CAAH,sDCIPQ,EAAU,SAAC,GAAoB,IAAjBf,EAAgB,EAAhBA,SAAgB,ECHf,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAM,GACNU,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAW,WAEPC,YAAY,WAERrB,EAASC,GACJqB,MAAM,SAAAC,GACHJ,EAAS,CACLZ,KAAMgB,EACNN,SAAS,SAItB,OAEJ,CAAChB,IAGJa,QAAQC,IAAII,GAELD,EDrB0BM,CAAcvB,GAAlCW,EAF0B,EAE/BL,KAAaU,EAFkB,EAElBA,QAErB,OAEI,qCACI,qBAAIpB,UAAU,oCAAd,cAAqDI,KAEnDgB,GAAW,mBAAGpB,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAGYe,EAAOH,KAAI,SAAEC,GAAF,OACP,cAAC,EAAD,eAESA,GADCA,EAAIC,aEjBpCc,EAAe,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAMvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,EAAe8C,WAAYA,IACvD,uBAEA,6BAEQA,EAAWjB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADJA,Y,MCdlC0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.32f522fd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n\r\n    const handleSubmit = ( e ) => {\r\n\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInDown\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=ZKBVVkMk7xDSL69dhKi92cIOuhEp581m`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    console.log(gifs);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n            <div className='card-grid'>\r\n                \r\n                    {\r\n                        images.map(( img ) => (\r\n                            <GifGridItem \r\n                                key={ img.id } \r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useEffect, useState } from 'react';\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        \r\n        setTimeout( () => {\r\n            \r\n            getGifs( category )\r\n                .then( imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                })\r\n        \r\n        }, 3000);\r\n\r\n    }, [category])\r\n\r\n\r\n    console.log(setState);\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    // const handleAdd = () => {\r\n    //     setcategories( [...categories, 'Naruto']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} categories={categories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={category}  \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>);\r\n}\r\n\r\nexport{\r\n    GifExpertApp as default\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}